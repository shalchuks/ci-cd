name: 
  2.3.$(Rev:r)

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  nupkgVersion: $(Build.BuildNumber)

parameters:

- name: NuGet
  displayName: NuGet Package Configuration
  type: string
  values:
    - 'Without Package Creation'
    - 'Package Creation ans Push'
    

- name: Publish
  displayName: Publish Package Configuration
  type: string
  values:
    - 'Without Package Creation'
    - 'Package Creation ans Push'

jobs:

- job: build
  displayName: Pipeline Configuration
  pool: 
      name: 'default'
      vmImage: 'SHALCHUK-NB'


  steps:

  - ${{ if and(eq(parameters.NuGet, 'Without Package Creation'), eq(parameters.Publish, 'Without Package Creation') }}:
      - script: echo Runnig - None of the packages
      
  


























  # - ${{ if eq(parameters.test, 'Both packages (NuGet and Publush)') }}:

  #     - script: echo Runnig - Both packages (NuGet and Publish)
  #     - task: NuGetToolInstaller@0
  #       displayName: 'Use NuGet 5.9.1'
  #       inputs:
  #         versionSpec: 5.9.1

  #     - task: NuGetCommand@2
  #       inputs:
  #         command: 'restore'
  #         restoreSolution: '**/*.sln'
  #         feedsToUse: 'select'
          

  #     - task: VSBuild@1
  #       inputs:
  #         solution: '**\*.sln'
  #         platform: '$(BuildPlatform)'
  #         configuration: '$(BuildConfiguration)'



  #     - task: NuGetCommand@2
  #       inputs:
  #         command: 'pack'
  #         packagesToPack: '**/*.nuspec'
  #         versioningScheme: byEnvVar
  #         versionEnvVar: nupkgVersion


  #     - task: NuGetCommand@2
  #       inputs:
  #         command: 'push'
  #         packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
  #         nuGetFeedType: 'internal'
  #         publishVstsFeed: 'c35e38d1-be09-4a19-820a-dbfaa929ff00/1c448e02-e13d-4b85-af85-66cffbe1c38a'
            

  #     - task: UniversalPackages@0
  #       inputs:
  #         command: 'publish'
  #         publishDirectory: '$(Build.SourcesDirectory)/SharpDocx/bin/Release/netstandard2.0'
  #         feedsToUsePublish: 'internal'
  #         vstsFeedPublish: 'c35e38d1-be09-4a19-820a-dbfaa929ff00/1c448e02-e13d-4b85-af85-66cffbe1c38a'
  #         vstsFeedPackagePublish: 'sharp_docx'
  #         versionOption: 'custom'
  #         versionPublish: '$(Build.BuildNumber)'

    